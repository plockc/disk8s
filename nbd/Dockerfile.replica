FROM golang:1.19 as builder
ARG TARGETOS
ARG TARGETARCH

RUN apt update && apt install -y upx protobuf-compiler

RUN mkdir /data
RUN chown 65532:65532 /data

WORKDIR /workspace
# Copy the Go Modules manifests
COPY go.mod go.mod

# have no dependencies,yet
COPY go.sum go.sum

RUN go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
RUN go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest

COPY ./replica/data-disk.proto ./replica/

RUN protoc --go_out=./ --go_opt=paths=source_relative --go-grpc_opt=paths=source_relative --go-grpc_out=./ replica/data-disk.proto

# cache deps before building and copying source so that we don't need to re-download as much
# and so that source changes don't invalidate our downloaded layer
RUN go mod download

# Copy the go source
COPY replica/cmd/ replica/cmd/
COPY ./replica/*.go ./replica/
COPY ./internal/ internal/

RUN CGO_ENABLED=0 go build -ldflags="-s -w" -a -o replica/replica replica/cmd/main.go

# compress the binary
RUN ls -l replica/
RUN upx --best --lzma replica/replica

# Use distroless as minimal base image to package the manager binary
# Refer to https://github.com/GoogleContainerTools/distroless for more details
FROM gcr.io/distroless/static:nonroot
WORKDIR /
ENV DISK_PATH=/data/disk8s.data
COPY --from=builder /workspace/replica/replica .
COPY --from=builder /data .
USER 65532:65532

ENTRYPOINT ["/replica"]
