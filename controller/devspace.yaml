version: v2beta1
name: disk8sgit

# This is a list of `pipelines` that DevSpace can execute (you can define your own)
pipelines:
  # This is the pipeline for the main command: `devspace dev` (or `devspace run-pipeline dev`)
  dev:
    run: |-
      run_dependencies --all       # 1. Deploy any projects this project needs (see "dependencies")
      devspace run manifest
      create_deployments --all     # 2. Deploy Helm charts and manifests specfied as "deployments"
      start_dev app                # 3. Start dev mode "app" (see "dev" section)
  # You can run this pipeline via `devspace deploy` (or `devspace run-pipeline deploy`)
  deploy:
    run: |-
      run_dependencies --all                            # 1. Deploy any projects this project needs (see "dependencies")
      build_images --all -t $(git describe --always)    # 2. Build, tag (git commit hash) and push all images (see "images")
      create_deployments --all                          # 3. Deploy Helm charts and manifests specfied as "deployments"
      devspace run apply-sample-disk
  build:
    run: |-
      devspace run manifest
      run_dependencies --all --pipeline build
      build_images --all --skip-push
  push:
    run: |-
      devspace run manifest
      run_dependencies --all --pipeline push
      build_images --all

# This is a list of `images` that DevSpace can build for this project
# We recommend to skip image building during development (devspace dev) as much as possible
images:
  app:
    image: plockc/disk8s-controller:latest
    tags:
      - latest
      - $(git describe --always --dirty)
    dockerfile: ./Dockerfile
    buildArgs:
      GIT_VERSION: $(git describe --always --dirty)

# This is a list of `deployments` that DevSpace can create for this project
deployments:
  app:
    # This deployment uses `kubectl` but you can also define `helm` deployments
    kubectl:
      manifests:
        - ../environments/default/disk8s.yaml

# This is a list of `dev` containers that are based on the containers created by your deployments
dev:
  app:
    # Search for the container that runs this image
    imageSelector: plockc/disk8s-controller:latest
    # Replace the container image with this dev-optimized image (allows to skip image building during development)
    devImage: ghcr.io/loft-sh/devspace-containers/go:1.18-alpine
    # Sync files between the local filesystem and the development container
    sync:
      - path: ./
        uploadExcludeFile: .dockerignore
    persistPaths:
      - path: /go/pkg/mod/cache/download
    # Open a terminal and use the following command to start it
    terminal:
      command: ./devspace_start.sh
    # Inject a lightweight SSH server into the container (so your IDE can connect to the remote dev env)
    ssh:
      enabled: true
    # Make the following commands from my local machine available inside the dev container
    proxyCommands:
      - command: devspace
      - command: kubectl
      - command: helm
      - command: git
    # Forward the following ports to be able access your application via localhost
    ports:
      - port: "2345"

# Use the `commands` section to define repeatable dev workflows for this project 
commands:
  apply-sample-disk:
    command: |-
      kubectl apply -f config/samples/disk.yaml
  remove-sample-disk:
    command: |-
      kubectl delete -f config/samples/disk.yaml
  manifest:
    command: |-
      make generate
      make manifests
      echo kustomizing
      kustomize build config/default | gojq --yaml-input -s > ../environments/default/kustomized.json
      cd ../environments
      echo running jsonnet
      gitVer=$(git describe --always --dirty)
      jsonnet --yaml-stream -J vendor -J lib --ext-str gitVer=$gitVer default/disk8s.jsonnet  > default/disk8s.yaml
      echo manifest updated at default/disk8s.yaml

dependencies:
  nbd:
    path: ../nbd        # Path-based dependencies (for monorepos)
